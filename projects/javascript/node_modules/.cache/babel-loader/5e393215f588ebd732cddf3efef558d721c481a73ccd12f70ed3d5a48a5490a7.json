{"ast":null,"code":"import _toConsumableArray from\"/Users/smitting/.cursor-tutor/projects/javascript/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/smitting/.cursor-tutor/projects/javascript/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';/**\n * TicTacToe Component - A playable Tic Tac Toe game using keyboard numpad input\n * Players alternate between X and O, using numpad numbers corresponding to board positions:\n * 7|8|9\n * 4|5|6 \n * 1|2|3\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TicTacToe(){// Game state management\nvar _React$useState=React.useState(Array(9).fill(null)),_React$useState2=_slicedToArray(_React$useState,2),board=_React$useState2[0],setBoard=_React$useState2[1];var _React$useState3=React.useState(true),_React$useState4=_slicedToArray(_React$useState3,2),xIsNext=_React$useState4[0],setXIsNext=_React$useState4[1];// true = X's turn, false = O's turn\nvar _React$useState5=React.useState(null),_React$useState6=_slicedToArray(_React$useState5,2),winner=_React$useState6[0],setWinner=_React$useState6[1];// null = game in progress, 'X'/'O' = winner, 'Draw' = tie game\n// Handle keyboard input for game moves\nReact.useEffect(function(){var handleKeyPress=function handleKeyPress(e){// Map keyboard numpad keys to board index positions\nvar keyToIndex={'7':0,'8':1,'9':2,'4':3,'5':4,'6':5,'1':6,'2':7,'3':8,'Numpad7':0,'Numpad8':1,'Numpad9':2,'Numpad4':3,'Numpad5':4,'Numpad6':5,'Numpad1':6,'Numpad2':7,'Numpad3':8};// Process valid moves only if game is still active\nif(keyToIndex.hasOwnProperty(e.key)&&!winner){var index=keyToIndex[e.key];if(!board[index]){// Check if cell is empty\nvar newBoard=_toConsumableArray(board);newBoard[index]=xIsNext?'X':'O';setBoard(newBoard);setXIsNext(!xIsNext);checkWinner(newBoard);}}};// Add and cleanup keyboard event listeners\nwindow.addEventListener('keydown',handleKeyPress);return function(){return window.removeEventListener('keydown',handleKeyPress);};},[board,xIsNext,winner]);/**\n   * Check if the current board state has a winner\n   * @param {Array} currentBoard - Current state of the game board\n   */var checkWinner=function checkWinner(currentBoard){// All possible winning combinations\nvar lines=[[0,1,2],[3,4,5],[6,7,8],// rows\n[0,3,6],[1,4,7],[2,5,8],// columns\n[0,4,8],[2,4,6]// diagonals\n];// Check each winning combination\nfor(var _i=0,_lines=lines;_i<_lines.length;_i++){var line=_lines[_i];var _line=_slicedToArray(line,3),a=_line[0],b=_line[1],c=_line[2];if(currentBoard[a]&&currentBoard[a]===currentBoard[b]&&currentBoard[a]===currentBoard[c]){setWinner(currentBoard[a]);return;}}// Check for draw (all cells filled with no winner)\nif(!currentBoard.includes(null)){setWinner('Draw');}};/**\n   * Reset the game state to initial values\n   */var resetGame=function resetGame(){setBoard(Array(9).fill(null));setXIsNext(true);setWinner(null);};// Game UI rendering\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',minHeight:'100vh',background:'linear-gradient(135deg, #FFD700, #FFA500)',padding:'20px',fontFamily:'Comic Sans MS, cursive'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'3em',color:'#FF4500',textShadow:'3px 3px 0px #FFF',marginBottom:'20px'},children:\"Tic Tac Toe Fun!\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'1.5em',color:'#4B0082',marginBottom:'20px'},children:\"Use numpad (789/456/123) to play!\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(3, 80px)',gap:'10px',margin:'20px auto',width:'fit-content',background:'#FFF',padding:'15px',borderRadius:'15px',boxShadow:'0 0 20px rgba(0,0,0,0.2)'},children:board.map(function(cell,index){return/*#__PURE__*/_jsx(\"div\",{style:{width:'80px',height:'80px',border:'3px solid #4B0082',borderRadius:'10px',display:'flex',alignItems:'center',justifyContent:'center',fontSize:'40px',fontWeight:'bold',color:cell==='X'?'#FF4500':'#4B0082',background:'#FFF',cursor:'pointer',transition:'transform 0.2s',':hover':{transform:'scale(1.05)'}},children:cell},index);})}),winner&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',animation:'bounce 1s infinite'},children:[/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'2em',color:'#4B0082',marginBottom:'15px'},children:winner==='Draw'?\"It's a Draw! 🤝\":\"\".concat(winner,\" Wins! \\uD83C\\uDF89\")}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,style:{fontSize:'1.5em',padding:'10px 30px',borderRadius:'25px',border:'none',background:'#4B0082',color:'#FFF',cursor:'pointer',boxShadow:'0 4px 8px rgba(0,0,0,0.2)',transition:'transform 0.2s',':hover':{transform:'scale(1.05)'}},children:\"Play Again! \\uD83C\\uDFAE\"})]}),!winner&&/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'2em',color:'#4B0082',marginTop:'20px'},children:[\"Next player: \",xIsNext?'❌':'⭕']})]});}export default TicTacToe;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","TicTacToe","_React$useState","useState","Array","fill","_React$useState2","_slicedToArray","board","setBoard","_React$useState3","_React$useState4","xIsNext","setXIsNext","_React$useState5","_React$useState6","winner","setWinner","useEffect","handleKeyPress","e","keyToIndex","hasOwnProperty","key","index","newBoard","_toConsumableArray","checkWinner","window","addEventListener","removeEventListener","currentBoard","lines","_i","_lines","length","line","_line","a","b","c","includes","resetGame","style","textAlign","minHeight","background","padding","fontFamily","children","fontSize","color","textShadow","marginBottom","display","gridTemplateColumns","gap","margin","width","borderRadius","boxShadow","map","cell","height","border","alignItems","justifyContent","fontWeight","cursor","transition","transform","marginTop","animation","concat","onClick"],"sources":["/Users/smitting/.cursor-tutor/projects/javascript/src/components/TicTacToe.js"],"sourcesContent":["import React from 'react';\n\n/**\n * TicTacToe Component - A playable Tic Tac Toe game using keyboard numpad input\n * Players alternate between X and O, using numpad numbers corresponding to board positions:\n * 7|8|9\n * 4|5|6 \n * 1|2|3\n */\nfunction TicTacToe() {\n  // Game state management\n  const [board, setBoard] = React.useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = React.useState(true); // true = X's turn, false = O's turn\n  const [winner, setWinner] = React.useState(null); // null = game in progress, 'X'/'O' = winner, 'Draw' = tie game\n\n  // Handle keyboard input for game moves\n  React.useEffect(() => {\n    const handleKeyPress = (e) => {\n      // Map keyboard numpad keys to board index positions\n      const keyToIndex = {\n        '7': 0, '8': 1, '9': 2,\n        '4': 3, '5': 4, '6': 5,\n        '1': 6, '2': 7, '3': 8,\n        'Numpad7': 0, 'Numpad8': 1, 'Numpad9': 2,\n        'Numpad4': 3, 'Numpad5': 4, 'Numpad6': 5,\n        'Numpad1': 6, 'Numpad2': 7, 'Numpad3': 8\n      };\n\n      // Process valid moves only if game is still active\n      if (keyToIndex.hasOwnProperty(e.key) && !winner) {\n        const index = keyToIndex[e.key];\n        if (!board[index]) { // Check if cell is empty\n          const newBoard = [...board];\n          newBoard[index] = xIsNext ? 'X' : 'O';\n          setBoard(newBoard);\n          setXIsNext(!xIsNext);\n          checkWinner(newBoard);\n        }\n      }\n    };\n\n    // Add and cleanup keyboard event listeners\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [board, xIsNext, winner]);\n\n  /**\n   * Check if the current board state has a winner\n   * @param {Array} currentBoard - Current state of the game board\n   */\n  const checkWinner = (currentBoard) => {\n    // All possible winning combinations\n    const lines = [\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], // rows\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // columns\n      [0, 4, 8], [2, 4, 6] // diagonals\n    ];\n\n    // Check each winning combination\n    for (let line of lines) {\n      const [a, b, c] = line;\n      if (currentBoard[a] && \n          currentBoard[a] === currentBoard[b] && \n          currentBoard[a] === currentBoard[c]) {\n        setWinner(currentBoard[a]);\n        return;\n      }\n    }\n\n    // Check for draw (all cells filled with no winner)\n    if (!currentBoard.includes(null)) {\n      setWinner('Draw');\n    }\n  };\n\n  /**\n   * Reset the game state to initial values\n   */\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n    setWinner(null);\n  };\n\n  // Game UI rendering\n  return (\n    <div style={{ \n      textAlign: 'center',\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #FFD700, #FFA500)',\n      padding: '20px',\n      fontFamily: 'Comic Sans MS, cursive'\n    }}>\n      <h1 style={{\n        fontSize: '3em',\n        color: '#FF4500',\n        textShadow: '3px 3px 0px #FFF',\n        marginBottom: '20px'\n      }}>\n        Tic Tac Toe Fun!\n      </h1>\n      <p style={{\n        fontSize: '1.5em',\n        color: '#4B0082',\n        marginBottom: '20px'\n      }}>\n        Use numpad (789/456/123) to play!\n      </p>\n      {/* Game board grid */}\n      <div style={{ \n        display: 'grid', \n        gridTemplateColumns: 'repeat(3, 80px)',\n        gap: '10px',\n        margin: '20px auto',\n        width: 'fit-content',\n        background: '#FFF',\n        padding: '15px',\n        borderRadius: '15px',\n        boxShadow: '0 0 20px rgba(0,0,0,0.2)'\n      }}>\n        {/* Render individual board cells */}\n        {board.map((cell, index) => (\n          <div key={index} style={{\n            width: '80px',\n            height: '80px',\n            border: '3px solid #4B0082',\n            borderRadius: '10px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '40px',\n            fontWeight: 'bold',\n            color: cell === 'X' ? '#FF4500' : '#4B0082',\n            background: '#FFF',\n            cursor: 'pointer',\n            transition: 'transform 0.2s',\n            ':hover': {\n              transform: 'scale(1.05)'\n            }\n          }}>\n            {cell}\n          </div>\n        ))}\n      </div>\n      {/* Winner announcement and reset button */}\n      {winner && (\n        <div style={{\n          marginTop: '20px',\n          animation: 'bounce 1s infinite'\n        }}>\n          <p style={{\n            fontSize: '2em',\n            color: '#4B0082',\n            marginBottom: '15px'\n          }}>\n            {winner === 'Draw' ? \"It's a Draw! 🤝\" : `${winner} Wins! 🎉`}\n          </p>\n          <button onClick={resetGame} style={{\n            fontSize: '1.5em',\n            padding: '10px 30px',\n            borderRadius: '25px',\n            border: 'none',\n            background: '#4B0082',\n            color: '#FFF',\n            cursor: 'pointer',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n            transition: 'transform 0.2s',\n            ':hover': {\n              transform: 'scale(1.05)'\n            }\n          }}>\n            Play Again! 🎮\n          </button>\n        </div>\n      )}\n      {/* Current player indicator */}\n      {!winner && (\n        <p style={{\n          fontSize: '2em',\n          color: '#4B0082',\n          marginTop: '20px'\n        }}>\n          Next player: {xIsNext ? '❌' : '⭕'}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default TicTacToe; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}